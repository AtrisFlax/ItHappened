// <auto-generated />
using System;
using ItHappened.Infrastructure.EFCoreRepositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ItHappened.Infrastructure.Migrations
{
    [DbContext(typeof(ItHappenedDbContext))]
    [Migration("20201031141905_AddNewColumnsToEvents")]
    partial class AddNewColumnsToEvents
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ItHappened.Infrastructure.EFCoreRepositories.EventDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GpsLat")
                        .HasColumnType("float");

                    b.Property<double>("GpsLng")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset>("HappensDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<double?>("Scale")
                        .HasColumnType("float");

                    b.Property<Guid>("TrackerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
